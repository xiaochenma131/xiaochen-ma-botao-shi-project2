{"ast":null,"code":"var _jsxFileName = \"/Users/xiaochenma/Desktop/xiaochen-ma-botao-shi-project2/src/pages/OnePlayerBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport '../css/Board.css';\nimport { useSelector } from 'react-redux';\nimport MyBoard from '../components/MyBoard';\nimport PlayerWins from '../components/PlayerWins';\nimport ResetButton from '../components/ResetButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OnePlayerBoard() {\n  _s();\n\n  const myBoardState = useSelector(state => state.myBoard); // Iterate through the board and count the number of ship square left in the board. \n  // If there is no ship square left, \n  // it means that the player has hitted all the ships, \n  // return player wins!\n\n  let countShip = 0;\n\n  for (let i = 0; i < myBoardState.length; i++) {\n    for (let j = 0; j < myBoardState[0].length; j++) {\n      if (myBoardState[i][j] === 'ship') {\n        countShip++;\n      }\n    }\n  }\n\n  if (countShip === 0) {\n    return /*#__PURE__*/_jsxDEV(PlayerWins, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"bigContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(MyBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"buttonContainer\",\n      children: /*#__PURE__*/_jsxDEV(ResetButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OnePlayerBoard, \"nS4peZROq/UkpizDTJIbITgZU4o=\", false, function () {\n  return [useSelector];\n});\n\n_c = OnePlayerBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"OnePlayerBoard\");","map":{"version":3,"sources":["/Users/xiaochenma/Desktop/xiaochen-ma-botao-shi-project2/src/pages/OnePlayerBoard.jsx"],"names":["useSelector","MyBoard","PlayerWins","ResetButton","OnePlayerBoard","myBoardState","state","myBoard","countShip","i","length","j"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,QAAMC,YAAY,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAAhC,CADqC,CAGrC;AACA;AACA;AACA;;AACA,MAAIC,SAAS,GAAG,CAAhB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,YAAY,CAACK,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,YAAY,CAAC,CAAD,CAAZ,CAAgBK,MAApC,EAA4CC,CAAC,EAA7C,EAAiD;AAC7C,UAAIN,YAAY,CAACI,CAAD,CAAZ,CAAgBE,CAAhB,MAAuB,MAA3B,EAAmC;AAC/BH,QAAAA,SAAS;AACZ;AACJ;AACJ;;AAED,MAAIA,SAAS,KAAK,CAAlB,EAAqB;AACjB,wBAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,6BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA,6BAA6B,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA5BuBJ,c;UACCJ,W;;;KADDI,c","sourcesContent":["import '../css/Board.css'\nimport { useSelector } from 'react-redux';\nimport MyBoard from '../components/MyBoard';\nimport PlayerWins from '../components/PlayerWins';\nimport ResetButton from '../components/ResetButton';\n\nexport default function OnePlayerBoard() {\n    const myBoardState = useSelector((state) => state.myBoard);\n\n    // Iterate through the board and count the number of ship square left in the board. \n    // If there is no ship square left, \n    // it means that the player has hitted all the ships, \n    // return player wins!\n    let countShip = 0\n    for (let i = 0; i < myBoardState.length; i++) {\n        for (let j = 0; j < myBoardState[0].length; j++) {\n            if (myBoardState[i][j] === 'ship') {\n                countShip++;\n            }\n        }\n    }\n\n    if (countShip === 0) {\n        return <PlayerWins />;\n    }\n\n    return (\n        <div class='bigContainer'>\n            <div class='container'>\n                <MyBoard />\n            </div>\n            <div class='buttonContainer'><ResetButton /></div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}