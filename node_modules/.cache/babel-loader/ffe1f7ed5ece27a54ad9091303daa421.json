{"ast":null,"code":"var _jsxFileName = \"/Users/xiaochenma/Desktop/xiaochen-ma-botao-shi-project2/src/pages/TwoPlayerBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport '../css/Board.css';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport EnemyBoard from '../components/EnemyBoard';\nimport MyBoard from '../components/MyBoard';\nimport PlayerWins from '../components/PlayerWins';\nimport EnemyWins from '../components/EnemyWins';\nimport ResetButton from '../components/ResetButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TwoPlayerBoard() {\n  _s();\n\n  const myTurnState = useSelector(state => state.myTurn);\n  const enemyBoardState = useSelector(state => state.enemyBoard);\n  const myBoardState = useSelector(state => state.myBoard);\n  const dispatch = useDispatch(); // End game logic\n\n  let countShip = 0;\n\n  for (let i = 0; i < enemyBoardState.length; i++) {\n    for (let j = 0; j < enemyBoardState[0].length; j++) {\n      if (enemyBoardState[i][j] === 'ship') {\n        countShip++;\n      }\n    }\n  }\n\n  if (countShip === 0) {\n    return /*#__PURE__*/_jsxDEV(EnemyWins, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n  countShip = 0;\n\n  for (let i = 0; i < myBoardState.length; i++) {\n    for (let j = 0; j < myBoardState[0].length; j++) {\n      if (myBoardState[i][j] === 'ship') {\n        countShip++;\n      }\n    }\n  }\n\n  if (countShip === 0) {\n    return /*#__PURE__*/_jsxDEV(PlayerWins, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  } // AI logic\n\n\n  if (myTurnState === 0) {\n    let x = Math.floor(Math.random() * 10);\n    let y = Math.floor(Math.random() * 10);\n\n    while (enemyBoardState[x][y] === 'hit' || enemyBoardState[x][y] === 'miss') {\n      x = Math.floor(Math.random() * 10);\n      y = Math.floor(Math.random() * 10);\n    }\n\n    dispatch({\n      type: 'enemyBoardClick',\n      x: x,\n      y: y\n    });\n    dispatch({\n      type: 'changeTurn',\n      squareStateOfClicked: '' // Hacky to prevent infinite loop\n\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"bigContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"myContainer\",\n        children: [\"My Board\", /*#__PURE__*/_jsxDEV(MyBoard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"enemyContainer\",\n        children: [\"Enemy Board\", /*#__PURE__*/_jsxDEV(EnemyBoard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"buttonContainer\",\n      children: /*#__PURE__*/_jsxDEV(ResetButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TwoPlayerBoard, \"YYHCrZN3uNFD3Rq45PdSn7TtMnk=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = TwoPlayerBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwoPlayerBoard\");","map":{"version":3,"sources":["/Users/xiaochenma/Desktop/xiaochen-ma-botao-shi-project2/src/pages/TwoPlayerBoard.jsx"],"names":["useSelector","useDispatch","EnemyBoard","MyBoard","PlayerWins","EnemyWins","ResetButton","TwoPlayerBoard","myTurnState","state","myTurn","enemyBoardState","enemyBoard","myBoardState","myBoard","dispatch","countShip","i","length","j","x","Math","floor","random","y","type","squareStateOfClicked"],"mappings":"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","sourcesContent":["import '../css/Board.css'\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport EnemyBoard from '../components/EnemyBoard'\nimport MyBoard from '../components/MyBoard';\nimport PlayerWins from '../components/PlayerWins';\nimport EnemyWins from '../components/EnemyWins';\nimport ResetButton from '../components/ResetButton';\n\nexport default function TwoPlayerBoard() {\n    const myTurnState = useSelector((state) => state.myTurn);\n    const enemyBoardState = useSelector((state) => state.enemyBoard);\n    const myBoardState = useSelector((state) => state.myBoard);\n    const dispatch = useDispatch();\n\n    // End game logic\n    let countShip = 0;\n    for (let i = 0; i < enemyBoardState.length; i++) {\n        for (let j = 0; j < enemyBoardState[0].length; j++) {\n            if (enemyBoardState[i][j] === 'ship') {\n                countShip++;\n            }\n        }\n    }\n    if (countShip === 0) {\n        return (\n            <EnemyWins />\n        )\n    }\n    countShip = 0;\n    for (let i = 0; i < myBoardState.length; i++) {\n        for (let j = 0; j < myBoardState[0].length; j++) {\n            if (myBoardState[i][j] === 'ship') {\n                countShip++;\n            }\n        }\n    }\n    if (countShip === 0) {\n        return (\n            <PlayerWins />\n        )\n    }\n\n    // AI logic\n    if (myTurnState === 0) {\n        let x = Math.floor(Math.random() * 10);\n        let y = Math.floor(Math.random() * 10);\n        while (enemyBoardState[x][y] === 'hit' || enemyBoardState[x][y] === 'miss') {\n            x = Math.floor(Math.random() * 10);\n            y = Math.floor(Math.random() * 10);\n        }\n        dispatch(\n            {\n                type: 'enemyBoardClick',\n                x: x,\n                y: y,\n            }\n        );\n        dispatch(\n            {\n                type: 'changeTurn',\n                squareStateOfClicked: '', // Hacky to prevent infinite loop\n            }\n        );\n    }\n\n    return (\n        <div class='bigContainer'>\n            <div class='container'>\n                <div class='myContainer'>\n                    My Board\n                    <MyBoard />\n                </div>\n                <div class='enemyContainer'>\n                    Enemy Board\n                    <EnemyBoard />\n                </div>\n            </div>\n            <div class='buttonContainer'><ResetButton /></div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}